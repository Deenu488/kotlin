--- KtFile ---
<File name: onReference.kt, Physical: true>
<ELEMENT>fun test(a: Any) {
    if (a !is Foo) {
        return
    }

    check(a.process())
}

fun check(condition: Boolean) {}

interface Foo {
    fun process(): Boolean
}
</ELEMENT> [(0,167)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope

--- KtPackageDirective ---
<File name: onReference.kt, Physical: true>
<ELEMENT></ELEMENT> [(0,0)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope

--- KtNamedFunction ---
<File name: onReference.kt, Physical: true>
<ELEMENT>fun test(a: Any) {
    if (a !is Foo) {
        return
    }

    check(a.process())
}</ELEMENT> [(0,86)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope

--- KtParameter ---
<File name: onReference.kt, Physical: true>
fun test(<ELEMENT>a: Any</ELEMENT>) {
    if (a !is Foo) {
        return
    }

    check(a.process())
} [(9,15)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|

--- KtTypeReference ---
<File name: onReference.kt, Physical: true>
fun test(a: <ELEMENT>Any</ELEMENT>) {
    if (a !is Foo) {
        return
    }

    check(a.process())
} [(12,15)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|

--- KtBlockExpression ---
<File name: onReference.kt, Physical: true>
fun test(a: Any) <ELEMENT>{
    if (a !is Foo) {
        return
    }

    check(a.process())
}</ELEMENT> [(17,86)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|

--- KtIfExpression ---
<File name: onReference.kt, Physical: true>
fun test(a: Any) {
    <ELEMENT>if (a !is Foo) {
        return
    }</ELEMENT>

    check(a.process())
} [(23,60)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|
    Element 7
        Scope: FirLocalScope

--- KtIsExpression ---
<File name: onReference.kt, Physical: true>
fun test(a: Any) {
    if (<ELEMENT>a !is Foo</ELEMENT>) {
        return
    }

    check(a.process())
} [(27,36)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|
    Element 7
        Scope: FirLocalScope

--- KtNameReferenceExpression ---
<File name: onReference.kt, Physical: true>
fun test(a: Any) {
    if (<ELEMENT>a</ELEMENT> !is Foo) {
        return
    }

    check(a.process())
} [(27,28)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|
    Element 7
        Scope: FirLocalScope

--- KtTypeReference ---
<File name: onReference.kt, Physical: true>
fun test(a: Any) {
    if (a !is <ELEMENT>Foo</ELEMENT>) {
        return
    }

    check(a.process())
} [(33,36)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|
    Element 7
        Scope: FirLocalScope

--- KtBlockExpression ---
<File name: onReference.kt, Physical: true>
fun test(a: Any) {
    if (a !is Foo) <ELEMENT>{
        return
    }</ELEMENT>

    check(a.process())
} [(38,60)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|
    Element 7
        Scope: FirLocalScope

--- KtReturnExpression ---
<File name: onReference.kt, Physical: true>
fun test(a: Any) {
    if (a !is Foo) {
        <ELEMENT>return</ELEMENT>
    }

    check(a.process())
} [(48,54)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|
    Element 7
        Scope: FirLocalScope
    Element 8
        Scope: FirLocalScope

--- KtCallExpression ---
<File name: onReference.kt, Physical: true>
fun test(a: Any) {
    if (a !is Foo) {
        return
    }

    <ELEMENT>check(a.process())</ELEMENT>
} [(66,84)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|
    Element 7
        Scope: FirLocalScope
Smart Casts:
    FirValueParameterSymbol a: R|kotlin/Any|
    Types:
        Foo
        kotlin.Any

--- KtNameReferenceExpression ---
<File name: onReference.kt, Physical: true>
fun test(a: Any) {
    if (a !is Foo) {
        return
    }

    <ELEMENT>check</ELEMENT>(a.process())
} [(66,71)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|
    Element 7
        Scope: FirLocalScope
Smart Casts:
    FirValueParameterSymbol a: R|kotlin/Any|
    Types:
        Foo
        kotlin.Any

--- KtValueArgumentList ---
<File name: onReference.kt, Physical: true>
fun test(a: Any) {
    if (a !is Foo) {
        return
    }

    check<ELEMENT>(a.process())</ELEMENT>
} [(71,84)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|
    Element 7
        Scope: FirLocalScope
Smart Casts:
    FirValueParameterSymbol a: R|kotlin/Any|
    Types:
        Foo
        kotlin.Any

--- KtDotQualifiedExpression ---
<File name: onReference.kt, Physical: true>
fun test(a: Any) {
    if (a !is Foo) {
        return
    }

    check(<ELEMENT>a.process()</ELEMENT>)
} [(72,83)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|
    Element 7
        Scope: FirLocalScope
Smart Casts:
    FirValueParameterSymbol a: R|kotlin/Any|
    Types:
        Foo
        kotlin.Any

--- KtNameReferenceExpression ---
<File name: onReference.kt, Physical: true>
fun test(a: Any) {
    if (a !is Foo) {
        return
    }

    check(<ELEMENT>a</ELEMENT>.process())
} [(72,73)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|
    Element 7
        Scope: FirLocalScope
Smart Casts:
    FirValueParameterSymbol a: R|kotlin/Any|
    Types:
        Foo
        kotlin.Any

--- KtNameReferenceExpression ---
<File name: onReference.kt, Physical: true>
fun test(a: Any) {
    if (a !is Foo) {
        return
    }

    check(a.<ELEMENT>process</ELEMENT>())
} [(74,81)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|
    Element 7
        Scope: FirLocalScope
Smart Casts:
    FirValueParameterSymbol a: R|kotlin/Any|
    Types:
        Foo
        kotlin.Any

--- KtValueArgumentList ---
<File name: onReference.kt, Physical: true>
fun test(a: Any) {
    if (a !is Foo) {
        return
    }

    check(a.process<ELEMENT>()</ELEMENT>)
} [(81,83)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol a: R|kotlin/Any|
    Element 7
        Scope: FirLocalScope
Smart Casts:
    FirValueParameterSymbol a: R|kotlin/Any|
    Types:
        Foo
        kotlin.Any

--- KtNamedFunction ---
<File name: onReference.kt, Physical: true>
<ELEMENT>fun check(condition: Boolean) {}</ELEMENT> [(88,120)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope

--- KtParameter ---
<File name: onReference.kt, Physical: true>
fun check(<ELEMENT>condition: Boolean</ELEMENT>) {} [(98,116)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol condition: R|kotlin/Boolean|

--- KtTypeReference ---
<File name: onReference.kt, Physical: true>
fun check(condition: <ELEMENT>Boolean</ELEMENT>) {} [(109,116)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol condition: R|kotlin/Boolean|

--- KtBlockExpression ---
<File name: onReference.kt, Physical: true>
fun check(condition: Boolean) <ELEMENT>{}</ELEMENT> [(118,120)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol condition: R|kotlin/Boolean|

--- KtClass ---
<File name: onReference.kt, Physical: true>
<ELEMENT>interface Foo {
    fun process(): Boolean
}</ELEMENT> [(122,166)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope

--- KtNamedFunction ---
<File name: onReference.kt, Physical: true>
<ELEMENT>fun process(): Boolean</ELEMENT> [(142,164)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Implicit receiver:
            FirRegularClassSymbol public abstract interface Foo : R|kotlin/Any|
                Type: Foo

--- KtTypeReference ---
<File name: onReference.kt, Physical: true>
fun process(): <ELEMENT>Boolean</ELEMENT> [(157,164)]:
Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Implicit receiver:
            FirRegularClassSymbol public abstract interface Foo : R|kotlin/Any|
                Type: Foo

FILE: [ResolvedTo(IMPORTS)] onReference.kt
    public final [ResolvedTo(BODY_RESOLVE)] fun test([ResolvedTo(BODY_RESOLVE)] a: R|kotlin/Any|): R|kotlin/Unit| {
        when () {
            (R|<local>/a| !is R|Foo|) ->  {
                ^test Unit
            }
        }

        R|/check|(R|<local>/a|.R|/Foo.process|())
    }
    public final [ResolvedTo(BODY_RESOLVE)] fun check([ResolvedTo(BODY_RESOLVE)] condition: R|kotlin/Boolean|): R|kotlin/Unit| {
    }
    public abstract [ResolvedTo(STATUS)] interface Foo : R|kotlin/Any| {
        public abstract [ResolvedTo(BODY_RESOLVE)] fun process(): R|kotlin/Boolean|

    }
